Sorting

sort

d: 10 20 50 10 40 20 
std::sort(d.begin(), d.end())
d: 10 10 20 20 40 50 

merge

d: 10 20 30 40 50 
d2: 10 20 30 40 50 
d_target: 0 0 0 0 0 0 0 0 0 0 
std::merge(d.begin(), d.end(), d2.begin(), d2.end(), d_target.begin())
d_target: 10 10 20 20 30 30 40 40 50 50 
merge_itr is at d_target.end()

unique

d: 10 20 20 30 30 30 30 40 50 60 70 
unique_itr = unique(start_itr, end_itr);
*unique_itr: 40
std::distance(d.begin(), unique_itr): 7
d: 10 20 30 40 50 60 70 40 50 60 70 
unique_itr = d.erase(unique_itr, d.end())
unique_itr now at the end of d
d: 10 20 30 40 50 60 70 

binary_search

d: 10 20 30 40 50 60 70 
binary_search_bool = std::binary_search(d.begin(), d.end(), 20);
binary_search_bool: 1

random_shuffle

d: 10 20 30 40 50 60 70 
std::random_shuffle(d.begin(), d.end());
d: 50 40 20 70 10 60 30 
